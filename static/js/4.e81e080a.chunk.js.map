{"version":3,"sources":["services/firebase.js","components/sidebar/Sidebar.js","components/navbar/Navbar.js","components/list/task/edit/Edit.js","components/list/task/delete/Delete.js","components/list/task/Task.js","components/list/List.js","components/editList/EditList.js","pages/dashboard/Dashboard.js","hooks/use-user.js"],"names":["doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","length","getUserByUserId","userId","map","item","data","docId","id","getListsByDocId","doc","addTask","listId","input","userDocRef","listsDocRef","tasksInListDocRef","tasksMainDocRef","dateCreated","Date","now","set","taskName","completed","due","urgent","taskIdList","taskIdMain","addList","listDocRef","listName","Sidebar","lists","setCurrentList","userInfo","sidebarOpen","setSidebarOpen","user","useState","setInput","isInvalid","useContext","FirebaseContext","history","useHistory","className","list","index","onClick","handleListClick","disabled","type","event","preventDefault","placeholder","value","maxLength","onChange","e","target","auth","signOut","push","onKeyDown","key","Navbar","showListEdit","setShowListEdit","setShowDeleteList","UserContext","title","setTitle","useEffect","db","onSnapshot","snapshot","to","undefined","Edit","task","showEdit","setShowEdit","inputName","setInputName","inputDue","setInputDue","formatDate","date","toLocaleDateString","handleSaveName","update","handleSaveDate","onFocus","currentTarget","focus","Delete","handleDeleteTask","setShowDelete","showDelete","Task","sort","toggleCompleted","setToggleCompleted","toggleUrgent","setToggleUrgent","handleToggleCompleted","handleToggleUrgent","delete","timeZone","List","tasks","setTasks","orderBy","console","log","filterBy","bool","filter","fallback","EditList","showDeleteList","handleDelete","Dashboard","emptyList","emptyArr","setLists","currentList","activeUser","setActiveUser","uid","response","getUserObjByUserId","useUser","listData","loadLists","document"],"mappings":"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","file":"static/js/4.e81e080a.chunk.js","sourcesContent":["// import { firebase, FieldValue } from \"../lib/firebase\";\r\nimport { firebase } from \"../lib/firebase\";\r\n\r\nexport async function doesUsernameExist(username) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"username\", \"==\", username)\r\n    .get();\r\n\r\n  return result.docs.length > 0;\r\n}\r\n\r\nexport async function getUserByUsername(username) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"username\", \"==\", username)\r\n    .get();\r\n\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n}\r\n\r\n// get user from the firestore wher userId == userId(passed from the auth) ✔\r\nexport async function getUserByUserId(userId) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"userId\", \"==\", userId)\r\n    .get();\r\n\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n}\r\n\r\n// get lists (plural) ✔\r\nexport async function getListsByDocId(docId) {\r\n  let result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .doc(docId)\r\n    .collection(\"lists\")\r\n    .get();\r\n\r\n  result = result.docs.map((item) => ({\r\n    ...item.data(),\r\n  }));\r\n\r\n  return result;\r\n}\r\n\r\n// get tasks ✔\r\nexport async function getTasksFromListId(listId, userId) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .doc(userId)\r\n    .collection(\"lists\")\r\n    .doc(listId)\r\n    .collection(\"tasks\")\r\n    .get();\r\n\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n}\r\n\r\n// add task ✔\r\nexport async function addTask(listId, userId, input) {\r\n  var userDocRef = await firebase.firestore().collection(\"users\").doc(userId);\r\n\r\n  var listsDocRef = userDocRef.collection(\"lists\").doc(listId);\r\n  var tasksInListDocRef = listsDocRef.collection(\"tasks\").doc();\r\n  var tasksMainDocRef = userDocRef.collection(\"tasks\").doc();\r\n  var dateCreated = Date.now();\r\n\r\n  tasksInListDocRef.set({\r\n    taskName: input,\r\n    dateCreated: dateCreated,\r\n    completed: false,\r\n    due: dateCreated,\r\n    urgent: false,\r\n    taskIdList: tasksInListDocRef.id,\r\n    taskIdMain: tasksMainDocRef.id,\r\n  });\r\n\r\n  tasksMainDocRef.set({\r\n    taskName: input,\r\n    dateCreated: dateCreated,\r\n    completed: false,\r\n    due: dateCreated,\r\n    urgent: false,\r\n    taskIdList: tasksInListDocRef.id,\r\n    taskIdMain: tasksMainDocRef.id,\r\n  });\r\n}\r\n\r\n// add list ✔\r\nexport async function addList(userId, input) {\r\n  var listDocRef = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .doc(userId)\r\n    .collection(\"lists\")\r\n    .doc();\r\n\r\n  listDocRef.set({\r\n    listName: input,\r\n    dateCreated: Date.now(),\r\n    listId: listDocRef.id,\r\n  });\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { addList } from \"../../services/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./sidebar.scss\";\r\nimport FirebaseContext from \"../../context/firebase\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nexport default function Sidebar({\r\n  lists,\r\n  setCurrentList,\r\n  userInfo,\r\n  sidebarOpen,\r\n  setSidebarOpen,\r\n  user,\r\n}) {\r\n  const [input, setInput] = useState(\"\");\r\n  const isInvalid = input === \"\";\r\n  const { firebase } = useContext(FirebaseContext);\r\n  const history = useHistory();\r\n\r\n  const handleAddList = (event) => {\r\n    event.preventDefault();\r\n    addList(userInfo.docId, input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleListClick = (list) => {\r\n    setCurrentList(list);\r\n    setSidebarOpen(false);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    firebase.auth().signOut();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className={\"sidebar \" + (sidebarOpen && \"active\")}>\r\n      <div className=\"sidebar-list\">\r\n        {lists.map((list, index) => (\r\n          <div className=\"sidebar-list-item\" key={`sidebar-${index}`}>\r\n            <span className=\"list-name\" onClick={() => handleListClick(list)}>\r\n              {list.listName}\r\n            </span>\r\n          </div>\r\n        ))}\r\n        {user && (\r\n          <form className=\"add\">\r\n            <button disabled={isInvalid} type=\"submit\" onClick={handleAddList}>\r\n              <AddCircleIcon className=\"add-icon\" />\r\n            </button>\r\n            <input\r\n              placeholder=\"Add a list\"\r\n              value={input}\r\n              maxLength={20}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n          </form>\r\n        )}\r\n      </div>\r\n      {user && (\r\n        <button\r\n          className=\"signout\"\r\n          onClick={() => handleSignOut()}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"enter\") {\r\n              history.push(\"/login\");\r\n              firebase.auth().signOut();\r\n            }\r\n          }}\r\n        >\r\n          Signout\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.scss\";\r\nimport UserContext from \"../../context/user\";\r\nimport db from \"../../lib/firebase\";\r\n// icons\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nexport default function Navbar({\r\n  list,\r\n  userInfo,\r\n  sidebarOpen,\r\n  setSidebarOpen,\r\n  showListEdit,\r\n  setShowListEdit,\r\n  setShowDeleteList,\r\n}) {\r\n  const { user } = useContext(UserContext);\r\n  const [title, setTitle] = useState(list.listName);\r\n\r\n  // update list name\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .onSnapshot((snapshot) => {\r\n        !snapshot.data() ? setTitle(title) : setTitle(snapshot.data().listName);\r\n      });\r\n  }, [list]);\r\n\r\n  const handleCloseLists = () => {\r\n    setShowListEdit(!showListEdit);\r\n    setShowDeleteList(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"relative\">\r\n        <div className=\"left\">\r\n          <div\r\n            className=\"hamburger\"\r\n            onClick={() => setSidebarOpen(!sidebarOpen)}\r\n          >\r\n            <MenuIcon className=\"icon\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"middle\">\r\n          <Link className=\"link-title\" to=\"/\">\r\n            {title === undefined ? <h2> </h2> : <h2>{`${title}`}</h2>}\r\n          </Link>\r\n        </div>\r\n        <div className=\"right\">\r\n          {!user && (\r\n            <>\r\n              <Link to=\"/login\">\r\n                <button>Login</button>\r\n              </Link>\r\n              <Link to=\"/signup\">\r\n                <button>Signup</button>\r\n              </Link>\r\n            </>\r\n          )}\r\n          {user && (\r\n            <MoreVertIcon\r\n              className=\"edit-list-icon\"\r\n              onClick={() => handleCloseLists()}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./edit.scss\";\r\nimport db from \"../../../../lib/firebase\";\r\n// icons\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport default function Edit({ task, userInfo, list, showEdit, setShowEdit }) {\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputDue, setInputDue] = useState(\"\");\r\n\r\n  function formatDate(date) {\r\n    return new Date(date).toLocaleDateString(\"en-US\");\r\n  }\r\n\r\n  const handleSaveName = async () => {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdList)\r\n      .update({\r\n        taskName: inputName,\r\n      });\r\n\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdMain)\r\n      .update({\r\n        taskName: inputName,\r\n      });\r\n  };\r\n\r\n  const handleSaveDate = async () => {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdList)\r\n      .update({\r\n        due: inputDue,\r\n      });\r\n\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdMain)\r\n      .update({\r\n        due: inputDue,\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={showEdit ? \"edit-item\" : \"edit-item inactive\"}>\r\n      <CloseIcon\r\n        className=\"close-edit\"\r\n        onClick={() => setShowEdit(!showEdit)}\r\n      />\r\n      <div className=\"info\">\r\n        <p>Task:</p>\r\n        <div className=\"edit-input\">\r\n          <input\r\n            type=\"text\"\r\n            maxLength={1000}\r\n            placeholder={`${task.taskName}`}\r\n            onChange={(e) => setInputName(e.target.value)}\r\n          ></input>\r\n          <SaveIcon className=\"save-icon\" onClick={() => handleSaveName()} />\r\n        </div>\r\n        <p>Due:</p>\r\n        <div className=\"edit-input\">\r\n          <input\r\n            type=\"text\"\r\n            onFocus={(e) => {\r\n              e.currentTarget.type = \"date\";\r\n              e.currentTarget.focus();\r\n            }}\r\n            placeholder={`${formatDate(task.due)}`}\r\n            onChange={(e) => setInputDue(e.target.value)}\r\n          ></input>\r\n          <SaveIcon className=\"save-icon\" onClick={() => handleSaveDate()} />\r\n        </div>\r\n        <p>Created:</p>\r\n        <p>{formatDate(task.dateCreated)}</p>\r\n        <p>Status:</p>\r\n        {task.completed ? (\r\n          <p className=\"completed-p\">Completed</p>\r\n        ) : (\r\n          <p>Incomplete</p>\r\n        )}\r\n        <p>Priority:</p>\r\n\r\n        {task.urgent ? <p className=\"urgent-p\">HIGH</p> : <p>Low</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./delete.scss\";\r\n// icons\r\n\r\nexport default function Delete({\r\n  handleDeleteTask,\r\n  showDelete,\r\n  setShowDelete,\r\n}) {\r\n  const handleDelete = () => {\r\n    handleDeleteTask();\r\n    setShowDelete((showDelete) => !showDelete);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowDelete((showDelete) => !showDelete);\r\n  };\r\n\r\n  return (\r\n    <div className=\"delete-item\">\r\n      <button className=\"cancel\" onClick={() => handleCancel()}>\r\n        Cancel\r\n      </button>\r\n      <button className=\"delete\" onClick={() => handleDelete()}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./task.scss\";\r\nimport db from \"../../../lib/firebase\";\r\nimport Edit from \"./edit/Edit\";\r\nimport Delete from \"./delete/Delete\";\r\n// icons\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\n\r\nexport default function Task({ task, userInfo, list, completed, sort, index }) {\r\n  const [toggleCompleted, setToggleCompleted] = useState(completed);\r\n  const [toggleUrgent, setToggleUrgent] = useState(task.urgent);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n\r\n  // completed\r\n  const handleToggleCompleted = async () => {\r\n    setToggleCompleted((toggleCompleted) => !toggleCompleted);\r\n\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdList)\r\n      .update({\r\n        completed: toggleCompleted ? false : true,\r\n      });\r\n\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdMain)\r\n      .update({\r\n        completed: toggleCompleted ? false : true,\r\n      });\r\n  };\r\n\r\n  // urgent\r\n  const handleToggleUrgent = async () => {\r\n    setToggleUrgent((toggleUrgent) => !toggleUrgent);\r\n\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdList)\r\n      .update({\r\n        urgent: toggleUrgent ? false : true,\r\n      });\r\n\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdMain)\r\n      .update({\r\n        urgent: toggleUrgent ? false : true,\r\n      });\r\n  };\r\n\r\n  // delete\r\n  const handleDeleteTask = async () => {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdList)\r\n      .delete();\r\n\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"tasks\")\r\n      .doc(task.taskIdMain)\r\n      .delete();\r\n  };\r\n\r\n  function formatDate(date) {\r\n    return new Date(date).toLocaleDateString(\"en-US\", { timeZone: \"UTC\" });\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-item-container\" key={index}>\r\n      <div className=\"list-item\">\r\n        <div className=\"left\">\r\n          {/* completed */}\r\n          <div className=\"icon-container\" onClick={handleToggleCompleted}>\r\n            {toggleCompleted ? (\r\n              <CheckCircleIcon className={`${task.completed}-completed`} />\r\n            ) : (\r\n              <CheckCircleIcon className={`${task.completed}-completed`} />\r\n            )}\r\n          </div>\r\n\r\n          {/* urgent */}\r\n          <div className=\"icon-container\" onClick={handleToggleUrgent}>\r\n            {toggleUrgent ? (\r\n              <PriorityHighIcon className={`${task.urgent}-urgent`} />\r\n            ) : (\r\n              <PriorityHighIcon className={`${task.urgent}-urgent`} />\r\n            )}\r\n          </div>\r\n\r\n          {/* task name */}\r\n          <p\r\n            className=\"task\"\r\n            onClick={() => setShowEdit((showEdit) => !showEdit)}\r\n          >\r\n            {task.taskName}\r\n            <CreateIcon className=\"create-icon\" />\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"right\">\r\n          {/* due date */}\r\n          <p\r\n            className=\"date\"\r\n            onClick={() => setShowEdit((showEdit) => !showEdit)}\r\n          >\r\n            <CreateIcon className=\"create-icon\" />\r\n            {formatDate(task.due)}\r\n          </p>\r\n\r\n          {/* delete */}\r\n          <div\r\n            className=\"icon-container\"\r\n            onClick={() => setShowDelete((showDelete) => !showDelete)}\r\n          >\r\n            <CloseIcon className=\"closeIcon\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {showEdit && (\r\n        <div className=\"edit-contianer\">\r\n          <Edit\r\n            task={task}\r\n            userInfo={userInfo}\r\n            list={list}\r\n            showEdit={showEdit}\r\n            setShowEdit={setShowEdit}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {showDelete && (\r\n        <div className=\"edit-contianer\">\r\n          <Delete\r\n            handleDeleteTask={handleDeleteTask}\r\n            showDelete={showDelete}\r\n            setShowDelete={setShowDelete}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Suspense } from \"react\";\r\nimport \"./list.scss\";\r\nimport Task from \"./task/Task\";\r\nimport db from \"../../lib/firebase\";\r\nimport { addTask } from \"../../services/firebase\";\r\n// icons\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nexport default function List({\r\n  list,\r\n  userInfo,\r\n  tasks,\r\n  setTasks,\r\n  setShowListEdit,\r\n  setShowDeleteList,\r\n  setSidebarOpen,\r\n}) {\r\n  const [input, setInput] = useState(\"\");\r\n  const isInvalid = input === \"\";\r\n\r\n  // update tasks\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .collection(\"tasks\")\r\n      .orderBy(\"due\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        console.log(\"update\");\r\n        setTasks(snapshot.docs.map((doc) => doc.data()));\r\n      });\r\n  }, [list]);\r\n\r\n  const handleAddTask = (event) => {\r\n    event.preventDefault();\r\n    addTask(list.listId, userInfo.docId, input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  const sortByDate = () => {\r\n    db.collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .collection(\"tasks\")\r\n      .orderBy(\"due\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        console.log(\"refresh-----\");\r\n        setTasks(snapshot.docs.map((doc) => doc.data()));\r\n      });\r\n  };\r\n\r\n  const filterBy = (item, bool) => {\r\n    setTasks(tasks.filter((task) => task[item] === bool));\r\n  };\r\n\r\n  const handleCloseListEdit = () => {\r\n    setShowListEdit(false);\r\n    setShowDeleteList(false);\r\n    setSidebarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<p className=\"suspense\">loading...</p>}>\r\n      <div className=\"list\" onClick={() => handleCloseListEdit()}>\r\n        {list.listId !== undefined && (\r\n          <form className=\"add\">\r\n            <button disabled={isInvalid} type=\"submit\" onClick={handleAddTask}>\r\n              <AddCircleIcon className=\"add-icon\" />\r\n            </button>\r\n            <input\r\n              placeholder=\"Add a task\"\r\n              value={input}\r\n              maxLength={1000}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n          </form>\r\n        )}\r\n        <div className=\"tasks-container\">\r\n          {tasks.map((item, index) => (\r\n            <>\r\n              <Task\r\n                task={item}\r\n                userInfo={userInfo}\r\n                list={list}\r\n                completed={item.completed}\r\n                index={index}\r\n              />\r\n            </>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"filterbar\">\r\n          <button onClick={() => filterBy(\"completed\", false)}>\r\n            <CheckCircleIcon className=\"incomplete-filter\" />\r\n          </button>\r\n          <button onClick={() => filterBy(\"completed\", true)}>\r\n            <CheckCircleIcon className=\"completed-filter\" />\r\n          </button>\r\n          <button onClick={() => filterBy(\"urgent\", true)}>\r\n            <PriorityHighIcon className=\"priority-filter\" />\r\n          </button>\r\n          <button className=\"refresh-button\" onClick={() => sortByDate()}>\r\n            <RefreshIcon className=\"refresh\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./editList.scss\";\r\nimport db from \"../../lib/firebase\";\r\n// icons\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport default function EditList({\r\n  list,\r\n  userInfo,\r\n  showListEdit,\r\n  setShowListEdit,\r\n  showDeleteList,\r\n  setShowDeleteList,\r\n  setSidebarOpen,\r\n  setTasks,\r\n}) {\r\n  const [inputName, setInputName] = useState(\"\");\r\n\r\n  const handleSaveName = async () => {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .update({\r\n        listName: inputName,\r\n      });\r\n\r\n    setInputName(\"\");\r\n    setShowListEdit(!showListEdit);\r\n    setShowDeleteList(false);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    await db\r\n      .collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .doc(list.listId)\r\n      .delete();\r\n\r\n    setInputName(\"\");\r\n    setShowListEdit(!showListEdit);\r\n    setShowDeleteList(false);\r\n    setSidebarOpen(true);\r\n    setTasks([]);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowDeleteList((showDeleteList) => !showDeleteList);\r\n  };\r\n\r\n  return (\r\n    <div className={showListEdit ? \"edit-list active\" : \"edit-list\"}>\r\n      <div className=\"edit-container\">\r\n        <p>Name:</p>\r\n        <div className=\"edit-input\">\r\n          <input\r\n            type=\"text\"\r\n            maxLength={20}\r\n            placeholder={`${list.listName}`}\r\n            onChange={(e) => setInputName(e.target.value)}\r\n          />\r\n          <SaveIcon className=\"save-icon\" onClick={() => handleSaveName()} />\r\n        </div>\r\n        <div className=\"delete-container\">\r\n          <CloseIcon\r\n            className=\"delete-icon\"\r\n            onClick={() => setShowDeleteList(!showDeleteList)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={showDeleteList ? \"delete-list show\" : \"delete-list\"}>\r\n        <button className=\"cancel\" onClick={() => handleCancel()}>\r\n          Cancel\r\n        </button>\r\n        <button className=\"delete\" onClick={() => handleDelete()}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./dashboard.scss\";\r\nimport UserContext from \"../../context/user\";\r\nimport useUser from \"../../hooks/use-user\";\r\nimport { getListsByDocId } from \"../../services/firebase\";\r\nimport db from \"../../lib/firebase\";\r\n//components\r\nimport Sidebar from \"../../components/sidebar/Sidebar\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport List from \"../../components/list/List\";\r\nimport EditList from \"../../components/editList/EditList\";\r\n\r\nexport default function Dashboard() {\r\n  // dummy imputs to keep initial load from returning undefined\r\n  const emptyList = {\r\n    listName: \"\",\r\n    tasks: [{ taskName: \"none\" }],\r\n  };\r\n  const emptyList2 = {\r\n    listName: \"\",\r\n    tasks: [{ taskName: \"none\" }],\r\n  };\r\n  const emptyArr = [emptyList, emptyList2];\r\n  const [lists, setLists] = useState(emptyArr);\r\n  const [currentList, setCurrentList] = useState(emptyList);\r\n\r\n  const { user } = useContext(UserContext);\r\n  const { userInfo } = useUser();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [sidebarOpen, setSidebarOpen] = useState(true);\r\n  const [showListEdit, setShowListEdit] = useState(false);\r\n  const [showDeleteList, setShowDeleteList] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // load lists upon initial load\r\n  useEffect(() => {\r\n    async function loadLists() {\r\n      const listData = await getListsByDocId(userInfo.docId);\r\n      if (listData) {\r\n        setLists(listData);\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    loadLists();\r\n    setCurrentList(lists[0]);\r\n  }, [userInfo.docId]);\r\n\r\n  // update dashboard to include newly added list\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(userInfo.docId)\r\n      .collection(\"lists\")\r\n      .onSnapshot((snapshot) => {\r\n        setLists(snapshot.docs.map((doc) => doc.data()));\r\n      });\r\n  }, [currentList]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    currentList.listName === \"\"\r\n      ? (document.title = `To Do`)\r\n      : (document.title = `To Do - ${currentList.listName}`);\r\n  }, [currentList]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Navbar\r\n        list={currentList}\r\n        userInfo={userInfo}\r\n        sidebarOpen={sidebarOpen}\r\n        setSidebarOpen={setSidebarOpen}\r\n        showListEdit={showListEdit}\r\n        setShowListEdit={setShowListEdit}\r\n        setShowDeleteList={setShowDeleteList}\r\n      />\r\n      <EditList\r\n        list={currentList}\r\n        userInfo={userInfo}\r\n        showListEdit={showListEdit}\r\n        setShowListEdit={setShowListEdit}\r\n        showDeleteList={showDeleteList}\r\n        setShowDeleteList={setShowDeleteList}\r\n        setSidebarOpen={setSidebarOpen}\r\n        setTasks={setTasks}\r\n      />\r\n      <Sidebar\r\n        lists={lists}\r\n        setCurrentList={setCurrentList}\r\n        userInfo={userInfo}\r\n        sidebarOpen={sidebarOpen}\r\n        setSidebarOpen={setSidebarOpen}\r\n        user={user}\r\n      />\r\n      <List\r\n        list={currentList}\r\n        userInfo={userInfo}\r\n        tasks={tasks}\r\n        setTasks={setTasks}\r\n        setShowListEdit={setShowListEdit}\r\n        setShowDeleteList={setShowDeleteList}\r\n        setSidebarOpen={setSidebarOpen}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport UserContext from \"../context/user\";\r\nimport { getUserByUserId } from \"../services/firebase\";\r\n\r\nexport default function useUser() {\r\n  const [activeUser, setActiveUser] = useState({});\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function getUserObjByUserId() {\r\n      const [response] = await getUserByUserId(user.uid);\r\n      setActiveUser(response);\r\n    }\r\n\r\n    if (user?.uid) {\r\n      getUserObjByUserId();\r\n    }\r\n  }, [user]);\r\n\r\n  // returns userInfo variable, cannot return user variable as that is used in userContext\r\n  return { userInfo: activeUser };\r\n}\r\n"],"sourceRoot":""}