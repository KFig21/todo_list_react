{"version":3,"sources":["context/firebase.js","constants/routes.js","lib/firebase.js","context/user.js","App.js","hooks/use-auth-listener.js","index.js"],"names":["FirebaseContext","createContext","DASHBOARD","LOGIN","SIGN_UP","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","db","UserContext","Login","lazy","Signup","Dashboard","App","user","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","basename","className","fallback","path","ROUTES","exact","component","ReactDOM","render","document","getElementById"],"mappings":"mHAAA,WAEMA,EAAkBC,wBAAc,MAEvBD,O,gCCJf,sGAAO,IAAME,EAAY,IACZC,EAAQ,SACRC,EAAU,W,gCCFvB,gFAcMC,GAdN,kBAciBC,IAASC,cATX,CACbC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,+CAIDC,EAAeR,IAASS,UAAxBD,WACFE,EAAKX,EAASU,YAGLC,O,gCCnBf,WAEMC,EAAchB,wBAAc,MAEnBgB,O,kNCKTC,EAAQC,gBAAK,kBAAM,gCACnBC,EAASD,gBAAK,kBAAM,gCACpBE,EAAYF,gBAAK,kBAAM,sDAsBdG,MApBf,WACE,IAAQC,ECXK,WACb,MAAwBC,mBACtBC,KAAKC,MAAMC,aAAaC,QAAQ,cADlC,mBAAOL,EAAP,KAAaM,EAAb,KAGQxB,EAAayB,qBAAW9B,KAAxBK,SAkBR,OAhBA0B,qBAAU,WACR,IAAMC,EAAW3B,EAAS4B,OAAOC,oBAAmB,SAACC,GAE/CA,GACFR,aAAaS,QAAQ,WAAYX,KAAKY,UAAUF,IAChDN,EAAQM,KAGRR,aAAaW,WAAW,YACxBT,EAAQ,UAIZ,OAAO,kBAAMG,OACZ,CAAC3B,IAEG,CAAEkB,QDXQgB,GAAThB,KAER,OACE,cAAC,IAAYiB,SAAb,CAAsBC,MAAO,CAAElB,QAA/B,SACE,cAAC,IAAD,CAAQmB,SAAS,mBAAjB,SACE,qBAAKC,UAAU,MAAf,SACE,cAAC,WAAD,CAAUC,SAAU,qBAAKD,UAAU,WAAf,wBAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAMC,IAAkBC,OAAK,EAACC,UAAW3B,IAChD,cAAC,IAAD,CAAOwB,KAAMC,IAAcC,OAAK,EAACC,UAAW9B,IAC5C,cAAC,IAAD,CAAO2B,KAAMC,IAAgBC,OAAK,EAACC,UAAW5B,gB,QEjB5D6B,IAASC,OACP,cAAC,IAAgBV,SAAjB,CAA0BC,MAAO,CAAEpC,aAAUS,gBAA7C,SACE,cAAC,EAAD,MAEFqC,SAASC,eAAe,W","file":"static/js/main.5c13bbfb.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst FirebaseContext = createContext(null);\r\n\r\nexport default FirebaseContext;\r\n","export const DASHBOARD = \"/\";\r\nexport const LOGIN = \"/login\";\r\nexport const SIGN_UP = \"/signup\";\r\n","import Firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDVlZXnXnixXDc8gOkFDPXUxm_uDNzdGmY\",\r\n  authDomain: \"to-do-list-react-28aa6.firebaseapp.com\",\r\n  projectId: \"to-do-list-react-28aa6\",\r\n  storageBucket: \"to-do-list-react-28aa6.appspot.com\",\r\n  messagingSenderId: \"841622654738\",\r\n  appId: \"1:841622654738:web:0499c6422190e1b2a92dcb\",\r\n};\r\n\r\nconst firebase = Firebase.initializeApp(config);\r\nconst { FieldValue } = Firebase.firestore;\r\nconst db = firebase.firestore();\r\n\r\nexport { firebase, FieldValue };\r\nexport default db;\r\n","import { createContext } from \"react\";\r\n\r\nconst UserContext = createContext(null);\r\n\r\nexport default UserContext;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport * as ROUTES from \"./constants/routes\";\nimport useAuthListener from \"./hooks/use-auth-listener\";\nimport UserContext from \"./context/user\";\n//styles\nimport \"./App.css\";\nimport \"./app.scss\";\n//pages\nconst Login = lazy(() => import(\"./pages/login/Login\"));\nconst Signup = lazy(() => import(\"./pages/signup/Signup\"));\nconst Dashboard = lazy(() => import(\"./pages/dashboard/Dashboard\"));\n\nfunction App() {\n  const { user } = useAuthListener();\n\n  return (\n    <UserContext.Provider value={{ user }}>\n      <Router basename=\"/todo_list_react\">\n        <div className=\"app\">\n          <Suspense fallback={<div className=\"suspense\">loading...</div>}>\n            <Switch>\n              <Route path={ROUTES.DASHBOARD} exact component={Dashboard} />\n              <Route path={ROUTES.LOGIN} exact component={Login} />\n              <Route path={ROUTES.SIGN_UP} exact component={Signup} />\n            </Switch>\n          </Suspense>\n        </div>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useEffect, useContext } from \"react\";\r\nimport FirebaseContext from \"../context/firebase\";\r\n\r\nexport default function useAuthListener() {\r\n  const [user, setUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"authUser\"))\r\n  );\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n      // we have a user... therefore we can store the user in localstorage\r\n      if (authUser) {\r\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n        setUser(authUser);\r\n      } else {\r\n        // we don't have an authUser, therfore clear the localstorage\r\n        localStorage.removeItem(\"authUser\");\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => listener();\r\n  }, [firebase]);\r\n\r\n  return { user };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport FirebaseContext from \"./context/firebase\";\nimport { firebase, FieldValue } from \"./lib/firebase\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}